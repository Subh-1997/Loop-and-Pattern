1. Print N stars
   Given an integer N, print N stars in a single line.

   import java.io.*;
   import java.util.*;

public class Solution {

    public static void main(String[] args) {
       Scanner sc = new Scanner(System.in);
       int n = sc.nextInt();
           for(int i=0;i<n;i++){
               System.out.print("*");
           }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2.Print a matrix of stars

Given two integers N and M as inputs, print a rectangle of N * M stars.

import java.io.*;
import java.util.*;
***
***
public class Solution {

    public static void main(String[] args) {
      Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        
         for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
               System.out.print("*");
           }  
             System.out.println();
           }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3.Stair Pattern 1

Take an integer N as input, print the corresponding stair pattern for N.
*
* *
* * *
* * * *
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
           int n = sc.nextInt();
        for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            System.out.println();
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4.Skip Even Numbers Half Pyramid

Take an integer N as input, print the corresponding pattern for N.
import java.io.*;
import java.util.*;
1
1 
1 3
1 3 
1 3 5
public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
           int n = sc.nextInt();
                for(int i=1;i<=n;i++){
            for(int j=1;j<=i;j++){
                if(j%2!=0){
                  System.out.print(j+" ");  
                }   
            }
            System.out.println();
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5.Two Line Star Pattern

Print a pattern consisting of N rows, where each row contains an asterisk (*) at the beginning and end of the line, with N-2 spaces in between.
The Pattern should look like:
Print the above pattern for a total of N Rows.
Refer Example ouput, for better clarification.
*  *
*  *
*  *
*  *
Explanation 0

Here N = 4, So each row should have N - 2 spaces which is 2. Thus the N rows(i.e, 4 rows) should be in the form (asterisk)(2 spaces)(asterisk)
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
         for(int i=1;i<=n;i++){
             System.out.print("*");
            for(int j=1;j<=n-2;j++){
               System.out.print(" ");
           }  
              System.out.print("*");
             System.out.println();
           }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5.Leading spaces pyramid

Take an integer N as input, print the corresponding pattern for N.
 *
**
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
           int n = sc.nextInt();
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n-i;j++){
                 System.out.print(" ");
            }
           
            for(int j=1;j<=i;j++){
                System.out.print("*");
            }
            System.out.println();
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6.From top to down
Write a program to print all Natural numbers from 1 to N where you have to take N as input from user
Sample Output 1 2 3
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
           int n = sc.nextInt();
        for(int i=1;i<=n;i++){
             System.out.print(i+" ");
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
7.Odd Game 1
Write a program to print all odd numbers from 1 to N where you have to take N as input from user. Here N is inclusive.
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
             Scanner sc = new Scanner(System.in);
           int n = sc.nextInt();
        for(int i=1;i<=n;i++){
            if(i%2!=0){
                System.out.print(i+" ");
            }
        }
        
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
8.Summation Game
Write a program to find sum all Natural numbers from 1 to N where you have to take N as input from user

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int sum = 0;
        for(int i=1;i<=n;i++){
            sum+=i;
        }
         System.out.println(sum);
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
9.From down to top
Write a program to print all Natural numbers from N to 1 where you have to take N as input from user
5 4 3 2 1

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int i=n;i>0;i--){
            System.out.print(i+" ");
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
10.Multiplication Table 52
Write a program to print the multiplication table of the number entered by the user, N.
The table for input N = 5 should get displayed in the following form:
5 * 1 = 5
5 * 2 = 10
5 * 3 = 15
5 * 4 = 20
5 * 5 = 25
5 * 6 = 30
5 * 7 = 35
5 * 8 = 40
5 * 9 = 45
5 * 10 = 50

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        
        for(int i=1;i<=10;i++){
           int ans=n*i;
            System.out.println(n+" * "+i+" = "+ans);
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
11.Easy Power
You are given two integers A and B. You have to find the value of A^B.
NOTE: The value of A^B will always be less than or equal to 10^9.\
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B = sc.nextInt();
        int ans=1;
        while(B!=0){
            ans*=A;
            B--;
        }   
         System.out.println(ans);
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
12.Count factor
Take an integer N as input and print the count of its factors. The factor of a number is the number that divides it perfectly leaving no remainder.

Example: 1, 2, 3, and 6 are factors of 6

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int count=0;
        for(int i=1;i<=A;i++){
            if(A%i==0){
                count++;
            }
        }
        System.out.print(count);
        
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
13.is it Prime? 2
Take an integer A as input, you have to tell whether it is a prime number or not.
A prime number is a natural number greater than 1 which is divisible only by 1 and itself.
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int count=0;
        for(int i=1;i<=A;i++){
            if(A%i==0){
                count++;
            }
        }
        if(count==2){
            System.out.print("YES ");
        }else{
            System.out.print("NO");
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
14.Is It Perfect? 1
Given the Number of Test Cases as T, For each test case, take an integer N as input, you have to tell whether it is a perfect number or not.
A perfect number is a positive integer that is equal to the sum of its proper positive divisors (excluding the number itself). A positive proper divisor divides a number without leaving any remainder

For the first test case A = 4, the answer is "NO" as sum of its proper divisors = 1 + 2 = 3, is not equal to 4. For the second test case A = 6, the answer is "YES" as sum of its proper divisors = 1 + 2 + 3 = 6, is equal to 6.

import java.io.*;
import java.util.*;

public class Solution {
    public static boolean isPerfect(int B){
        int sum =0;
        if(B%2!=0){
            return false;
        }
   //     for(int i=0;i<B;i++){
             if(B % i == 0){
                sum +=i; 
            }    
        }
        return B==sum;//
            OR
   for(int i=1;i<=B/2;i++){
            
             if(B % i == 0){
                sum +=i; 
            }    
        }
        return B==sum;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B ;
        
        for(int i=1;i<=A;i++){
            B=sc.nextInt();
            boolean res=isPerfect(B);
            if(res==true){
                System.out.println("YES");
            }else{
                System.out.println("NO");
            }
            
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
15.Count the digits 2
Take T (number of test cases) as input. For each test case, take integer N as input and Print the count of digits of that number.
Sample Input 
2
100
10101

Sample Output 
3
5
import java.io.*;
import java.util.*;

public class Solution {
    public static int countDigit(int B){
      
        int temp = B;
        int count =0;
        if(temp==0) {
                return 1;
            }
        
        while(temp!=0){
            temp=temp/10;
            count++;        
        }
        return count;
       
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int B;
         for(int i=1;i<=A;i++){
            B=sc.nextInt();
            System.out.println(countDigit(B));
         }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
16.Reverse integer 16
You are given an integer N and the task is to reverse the digits of the given integer. Return 0 if the result overflows and does not fit in a 32 bit signed integer
input:123
output:321

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int A = sc.nextInt();
        int rev=0;
        while(A!=0){
            int digit = A%10;
            A/=10;
            if(rev>Integer.MAX_VALUE/10 || (rev==Integer.MAX_VALUE/10 && digit>Integer.MAX_VALUE%10)){
                System.out.println(0);
            }
            if(rev<Integer.MIN_VALUE/10 || (rev==Integer.MIN_VALUE/10 && digit<Integer.MIN_VALUE%10)){
                System.out.println(0);
            }
            rev= rev*10+digit;
        }
        System.out.println(rev);
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
17.Armstrong Numbers!
You are given an integer N you need to print all the Armstrong Numbers between 1 to N. (N inclusive).

If sum of cubes of each digit of the number is equal to the number itself, then the number is called an Armstrong number.
import java.io.*;
import java.util.*;

public class Solution {
    public static void findArmStrong(int i){
        int arm=0,rem;
        int c=i;
        
        while(i>0){
            rem=i%10;
            arm=(rem*rem*rem)+arm;
            i=i/10;
        }
        if(c==arm){
            System.out.println(c);
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
         int A = sc.nextInt();
        for(int i=1;i<=A;i++){
            findArmStrong(i);
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
18.Print the Primes!
You are given an integer N you need to print all the Prime Numbers between 1 and N.
Prime numbers are numbers that have only 2 factors: 1 and themselves. For example, the first 5 prime numbers are 2, 3, 5, 7, and 11.

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
         Scanner sc = new Scanner(System.in);
         int A = sc.nextInt();
         
        for(int i=2;i<=A;i++){
            int count=0;
            for(int j=1;j<=i;j++){
                if(i%j==0){
                    count++;
                }
                
            }
           if(count==2){
                    System.out.println(i);
                }           
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
19.LCM - Easy
Implement a program that takes two positive integers A and B in the input and prints their LCM.
Definition of LCM : The Least Common Multiple or LCM of two numbers say A and B, is denoted as LCM (A,B). And the LCM is the smallest or least positive integer that is divisible by both A and B.
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
         int A = sc.nextInt();
         int B = sc.nextInt();
         int A2=A;
         int B2=B;
        while(A%B!=0){
            int rem = A%B;
            A=B;
            B=rem;
        }
        int gcd = B;
        int LCM = A2*B2/gcd;
        System.out.println(LCM);
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
20.Palindromic Integer 2
You are given an integer A as input and you need to determine whether it is a palindrome or not. A palindrome integer is one whose digits, when reversed, result in the same number. For example, 121 is a palindrome because its reverse is also 121, but 123 is not a palindrome because its reverse is 321.
Note: The given integer will not have any leading zeros.
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
         int A = sc.nextInt();
         int c=A;
         int rev=0;
        while(A>0){
            int digit = A%10;
            A=A/10;
            rev = rev*10+digit;
        }
        if(rev==c){
             System.out.println("Yes");
        }else{
             System.out.println("No");
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
21.Inverted Half Pyramid 1
Given an integer N, print the corresponding Inverted Half Pyramid pattern for N.
*****
****
***
**
*

import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
         int A = sc.nextInt();
        for(int row=1;row<=A;row++){
            for(int col=1;col<=A-row+1;col++){
                System.out.print("*");
            }
            System.out.println();
        }
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
22.Leading spaces inverted pyramid
Take an integer N as input, print the corresponding pattern for N. please see the sample test case to get clear undestanding of test case
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
         int A = sc.nextInt();
        int sp=0;
        int st=A;
        for(int i=1;i<=A;i++){
            for(int j=1;j<=sp;j++){
                System.out.print(" ");
            }
            for(int j=1;j<=st;j++){
                System.out.print("*");
            }
            sp++;
            st--;
            System.out.println();
        }
        
        /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
    }
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
